1. Dengan bahasa apa saja, diutamakan NodeJS, agar saudara membuat Rest API CRUD User dan User Login.
2. Framework dibebaskan, tetapi disarankan ExpressJS. Database bebas, tetapi disarankan MongoDB.
3. User Login digunakan user (username, password) untuk mengakses API CRUD (token, tetapi mendapatkan nilai tambahan jika menggunakan refresh token).
5. Bikin 2 users dengan role: 1 Admin, 1 User.
6. Admin bisa melakukan/mengakses semua API CRUD, sedangkan User hanya bisa mengakses data user bersangkutan saja (Read)
7. Implementasi arstektur Microservices, menggunakan Kubernetes dengan Docker container deploy di VPS (1 node dengan beberapa pod di dalamnya). Bagi yang belum memiliki VPS, maka cukup (a) menyiapkan semua YML agar aplikasi bisa dijalankan secara containerize dan siap di deploy di Kubernetes dan (b) di-deploy di lokal dan sertakan screenshoot. 
8. Upload source code ke Github beserta script YML Kubernetes.
9. Bikin dokumentasi API nya (Postman atau Swagger) yang bisa diakses ke server Rest API nya.
10. Bikin diagram arstektur nya yang menjelaskan flow API CRUD dan Login.
11. Lampirkan credential Admin di Readme.

Mohon submit kesini (biasanya orang kirim link Github) paling lambat 31 Desember 2021.

Kami harap SRE jg dapat mengerti pekerjaan minimum di BE, sehingga kami memberikan tes ini. Namun demikian yg akan dinilai tentunya berbeda dgn BE engineers. Di mana bagi BE engineers penilaian yg paling utamanya adalah arstektur aplikasi sedangkan pada SRE ada di proses pembuatan prosedur deployment.

Terima kasih :)

use sejutacita

db.createUser(
  {
    user: "sejutacita-user",
    pwd: "sejutacitauser",
    roles: [ { role: "readWrite", db: "sejutacita" } ]
  }
)

"seed-data": "seed -u 'mongodb://localhost:27017/mydb' --drop-database ./data"
"seed-data": "seed -u 'mongodb://billing-system-user:billingsystem02@34.101.233.81:27017/billing-system-staging' ./data"
sed -i 's/localhost:27017/billing-system-user:billingsystem02@34.101.233.81:27017/g' package.json
sed -i 's/mydb/billing-system-staging/g' package.json
sed -i 's/--drop-database//g' package.json
npm run seed-data
sed -i "s/--drop-collection/--drop-collections/g" package.json
sed -i "s/billing-system-staging/billing-system-staging'/g" package.json
npm run seed-data